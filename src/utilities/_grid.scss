
.col,
[class*="col-"] {
  max-width: 100%; // n√£o deixa a coluna ultrapassar a largura total
  padding-left: calc(var(--grid-gutter) / 2);
  padding-right: calc(var(--grid-gutter) / 2);
  width: 100%;
}

.col {
  flex: 1 0 0%;
  min-width: calc(1 / 12 * 100%);
}

.col-auto {
  flex: 0 0 auto;
  width: auto;
}

@include make-colums;

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: calc(var(--grid-gutter) * -0.5);
  margin-right: calc(var(--grid-gutter) * -0.5);

  // Aplica densidades
  @each $density in $densities {
    &.density-#{$density} {
      --grid-gutter: var(--grid-mobile-gutter-#{$density}-density);
    }
  }
}

.container,
.container-fluid,
.container-sm,
.container-md,
.container-lg,
.container-xl {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--grid-breakpoint);
  padding-left: var(--grid-margin);
  padding-right: var(--grid-margin);
  width: 100%;

  // Aplica densidades
  @each $density in $densities {
    &.density-#{$density} {
      --grid-margin: var(--grid-mobile-margin-#{$density}-density);
    }
  }

  // Remove nova margem em containers internos
  & & {
    padding-left: 0;
    padding-right: 0;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  @if $breakpoint != "mobile" {
    @include media-breakpoint($breakpoint) {
      @include make-grid($breakpoint);
    }
  }
}
