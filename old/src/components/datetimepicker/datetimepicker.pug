mixin datetimepicker(label="Label")
  // [html-validate-disable input-attributes]
  div(class="br-datetimepicker" data-mode=attributes.mode data-type=attributes.type datetimepicker-config=attributes.dataconfig  )
    - let disabled = attributes["class"].includes('disabled') ? 'disabled' : null
    +input(label)(id=attributes.id placeholder=attributes.placeholder type=attributes.type class=attributes.class disabled=disabled datetimepicker="true"   datainput)
      +button.circle.small(aria-label="Abrir Timepicker" data-toggle type='button' id=attributes.id + "-btn" disabled=disabled)
        if (attributes.type === "time")
          +icon.fa-clock
        else
          +icon.fa-calendar-alt

//- DateTimePicker simples
mixin datetimepicker-simple
  +datetimepicker("Label")(id="simples-input" type="text" placeholder="dd/mm/aaaa" mode="single"  class="has-icon")&attributes(attributes)

mixin datetimepicker-simple-custom
  +datetimepicker("Label")(id="simples-input-custom" type="text" placeholder="dd/mm/aaaa" mode="single" dataconfig="minDate: '15/04/2022'" class="has-icon")&attributes(attributes)

//- DateTimePicker com intervalo de datas
mixin datetimepicker-range
  +datetimepicker("Label")(id="range-input" type="text"   placeholder="dd/mm/aaaa at√© dd/mm/aaaa" mode="range" class="has-icon" datetimepicker-config="{minDate: '15/04/2022',}")&attributes(attributes)

//- Timepicker
mixin datetimepicker-time
  +datetimepicker("Label")(id="timepicker-input" type="time" placeholder="hh:mm" mode="single" class="has-icon")&attributes(attributes)

//- DatePicker + Timepicker
mixin datetimepicker-dateandtime
  +datetimepicker("Label")(id="dateandtime-input" type="datetime-local" placeholder="dd/mm/aaaa hh:mm" mode="single" class="has-icon")&attributes(attributes)
