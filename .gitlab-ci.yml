include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/DAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

image: node:16-alpine

stages:
  - Iniciar release
  - Dependências
  - Build
  - Validações Gitlab
  - Qualidade
  - Release

cache:
  paths:
    - node_modules/

variables:
  SAST_EXCLUDED_PATHS: spec, test, tests, tmp, .husky, .storybook, .vscode, coverage, dist, node_modules, package-lock.json, **/*.spec.js, **/*.spec.js.snap
  SECRET_DETECTION_HISTORIC_SCAN: "false"
  SECRET_DETECTION_EXCLUDED_PATHS: spec, test, tests, tmp, .husky, .vscode, coverage, dist, node_modules,
  SECURE_LOG_LEVEL: error

Iniciar:
  stage: Iniciar release
  environment:
    name: production
  when: manual
  allow_failure: false
  script:
    - echo 'Iniciando pipeline.'
  only:
    - main
    - next
    - next-major
    - /^[0-9]+(\.([0-9]|x))+$/
    - /^[0-9]+(\.([0-9]|x))+(-alpha)?$/
    - /alpha$/
    - /rc$/

Instalar dependências:
  stage: Dependências
  allow_failure: false
  artifacts:
    paths:
      - node_modules
    expire_in: 1 day
  script:
    - apk --no-cache add git
    - rm -rf dist
    - npm install
  only:
    - main
    - next
    - next-major
    - merge_requests
    - /^[0-9]+(\.([0-9]|x))+$/
    - /^[0-9]+(\.([0-9]|x))+(-alpha)?$/
    - /alpha$/
    - /rc$/

DS:
  stage: Build
  allow_failure: false
  needs: ["Instalar dependências"]
  artifacts:
    paths:
      - dist
    expire_in: 1 week
  script:
    - npm run build
  only:
    - main
    - next
    - next-major
    - merge_requests
    - /^[0-9]+(\.([0-9]|x))+$/
    - /^[0-9]+(\.([0-9]|x))+(-alpha)?$/
    - /alpha$/
    - /rc$/

dependency_scanning:
  stage: Validações Gitlab
  needs: ["DS"]
  allow_failure: false
  script:
    - echo 'Security/Dependency-Scanning.gitlab-ci.yml'

license_scanning:
  stage: Validações Gitlab
  needs: ["DS"]
  allow_failure: false
  script:
    - echo 'Security/License-Scanning.gitlab-ci.yml'

sast:
  stage: Validações Gitlab
  needs: ["DS"]
  allow_failure: false
  script:
    - echo 'Security/SAST.gitlab-ci.yml'

dast:
  stage: Validações Gitlab
  needs: ["DS"]
  allow_failure: false
  script:
    - echo 'Security/DAST.gitlab-ci.yml'

container_scanning:
  stage: Validações Gitlab
  needs: ["DS"]
  allow_failure: false
  script:
    - echo 'Security/Container-Scanning.gitlab-ci.yml'

code_quality:
  stage: Validações Gitlab
  needs: ["DS"]
  allow_failure: false
  artifacts:
    paths: [gl-code-quality-report.json]
  script:
    - echo 'VCode-Quality.gitlab-ci.yml'

Code Quality HTML:
  extends: code_quality
  stage: Validações Gitlab
  needs: ["DS"]
  allow_failure: false
  variables:
    REPORT_FORMAT: html
  artifacts:
    paths: [gl-code-quality-report.html]
  script:
    - echo 'VCode-Quality.gitlab-ci.yml'

secret_detection:
  stage: Validações Gitlab
  needs: ["DS"]
  allow_failure: false
  script:
    - echo 'Security/Secret-Detection.gitlab-ci.yml'

CSS:
  stage: Qualidade
  needs: ["DS"]
  artifacts:
    when: always
    paths:
      - report-stylelint.txt
    expire_in: 1 week
  script:
    - npx stylelint src/**/*.scss  --formatter verbose --output-file report-stylelint.txt
  only:
    - main
    - merge_requests

Commits:
  stage: Qualidade
  needs: ["DS"]
  allow_failure: false
  artifacts:
    when: always
    paths:
      - report-commitlint.txt
    expire_in: 1 week
  before_script:
    - apk --no-cache add git
  script:
    - >
      if [ "${CI_BUILD_BEFORE_SHA}" = "0000000000000000000000000000000000000000" ]; then
        echo "commitlint from HEAD^"
        npx commitlint -x @govbr-ds/commit-config -f HEAD^ > report-commitlint.txt
      else
        echo "commitlint from ${CI_BUILD_BEFORE_SHA}"
        br=`git branch -r --contains ${CI_BUILD_BEFORE_SHA}`
        if [ ! -n $br ]; then
          npx commitlint -x @govbr-ds/commit-config -f HEAD^ > report-commitlint.txt
        else
          npx commitlint -x @govbr-ds/commit-config -f "${CI_BUILD_BEFORE_SHA}" > report-commitlint.txt
        fi
      fi
  only:
    - main
    - next
    - next-major
    - merge_requests
    - /^[0-9]+(\.([0-9]|x))+$/
    - /^[0-9]+(\.([0-9]|x))+(-alpha)?$/
    - /alpha$/
    - /rc$/

Semantic Release:
  stage: Release
  environment:
    name: production
  artifacts:
    paths:
      - dist
    expire_in: 1 week
  before_script:
    - apk --no-cache add git zip
  script:
    - npx semantic-release
  only:
    - main
    - next
    - next-major
    - /^[0-9]+(\.([0-9]|x))+$/
    - /^[0-9]+(\.([0-9]|x))+(-alpha)?$/
    - /alpha$/
    - /rc$/
