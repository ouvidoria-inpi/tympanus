include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

image: node:14-alpine

stages:
  - build
  - test
  - .pre
  - .post
  - pages
  - deploy
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup

  



variables:
  SAST_EXCLUDED_PATHS:  .husky, .storybook, .vscode,  dist, node_modules, package-lock.json, **/*.spec.js, **/*.spec.js.snap'
  SAST_EXCLUDED_ANALYZERS: bandit, brakeman, flawfinder, gosec, kubesec, nodejs-scan,
      phpcs-security-audit, pmd-apex, security-code-scan, semgrep, sobelow, spotbugs

  SECRET_DETECTION_HISTORIC_SCAN: 'false'
  SECRET_DETECTION_EXCLUDED_PATHS: .husky, .vscode,  dist, node_modules'

cache:
  paths:
    - node_modules/

install_dependencies:
  stage: build
  script:
    - apk add openssh
    - apk add build-base file nasm autoconf
    - apk add --upgrade libpng-dev
    - export NODE_TLS_REJECT_UNAUTHORIZED=0
    - npm set strict-ssl false
    - npm install
    - ls
    - npm install sass
    - npm install acorn
    - cat node_modules/sass/package.json
    - npm run build
  artifacts:
    paths:
      - node_modules/
      - dist/

validate_html:
  stage: test
  script: npm run lint:html

# validate_js:
#   stage: test
#   script: npm run lint:js

validate_styles:
  stage: test
  script: npm run lint:styles

# https://gitlab.com/dmoonfire/commitlint-gitlab-ci/
commit_lint:
  stage: test
  script: npx commitlint-gitlab-ci -x @commitlint/config-conventional

pages:
  stage: pages
  artifacts:
    paths:
      - public
    expire_in: 1 week
  before_script:
    - mv dist public
  script:
    - npm run start
  only:
    - main
    - feat/sast-config

publish_npm:
  stage: pages
  artifacts:
    paths:
      - public
    expire_in: 1 week
  script:
    - npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
    - npm publish
  when: manual
  only:
    - main
    - feat/sast-config

sast:
  stage: test
  variables:
    SAST_EXCLUDED_PATHS:  .husky, .storybook, .vscode,  dist, node_modules, package-lock.json, **/*.spec.js, **/*.spec.js.snap'
    SAST_EXCLUDED_ANALYZERS: bandit, brakeman, flawfinder, gosec, kubesec, nodejs-scan,
        phpcs-security-audit, pmd-apex, security-code-scan, semgrep, sobelow, spotbugs


